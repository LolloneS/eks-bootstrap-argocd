apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: elastic-stack-composition
  labels:
    app: elastic-stack
  annotations:
    crossplane.io/external-name: "ElasticStackComposition"
spec:
  compositeTypeRef:
    apiVersion: eck.crossplane.io/v1alpha1
    kind: XElasticStack
  resources:
    - name: elasticsearch
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          name: replaceme
          namespace: default
        spec:
          forProvider:
            manifest:
              apiVersion: elasticsearch.k8s.elastic.co/v1
              kind: Elasticsearch
              metadata:
                name: elasticsearch
                namespace: elastic-system
              spec:
                version: "8.0.0"
                nodeSets:
                  - name: default
                    count: 1
                    volumeClaimTemplates:
                    - metadata:
                        name: elasticsearch-data
                      spec:
                        accessModes:
                        - ReadWriteOnce
                        resources:
                          requests:
                            storage: 5Gi
                        storageClassName: gp2 ## TODO move to gp3
                    config:
                      node.store.allow_mmap: false
                    podTemplate:
                      spec:
                        containers:
                          - name: elasticsearch
                            resources:
                              requests:
                                cpu: "500m"
                                memory: "1Gi"
                              limits:
                                cpu: "1"
                                memory: "1Gi"
          providerConfigRef:
            name: my-k8s-provider-config
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-elasticsearch"
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-elasticsearch"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.targetCluster.namespace
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: spec.version
          toFieldPath: spec.forProvider.manifest.spec.version
        - type: FromCompositeFieldPath
          fromFieldPath: spec.elasticsearch.nodeCount
          toFieldPath: spec.forProvider.manifest.spec.nodeSets[0].count
        - type: FromCompositeFieldPath
          fromFieldPath: spec.targetCluster.name
          toFieldPath: spec.providerConfigRef.name
    - name: kibana
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          name: replaceme
          namespace: default
        spec:
          forProvider:
            manifest:
              apiVersion: kibana.k8s.elastic.co/v1
              kind: Kibana
              metadata:
                name: kibana
                namespace: elastic-system
              spec:
                version: "8.0.0"
                count: 1
                elasticsearchRef:
                  name: replaceme
          providerConfigRef:
            name: my-k8s-provider-config
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-kibana"
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.elasticsearchRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-elasticsearch"
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-kibana"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.targetCluster.namespace
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: spec.version
          toFieldPath: spec.forProvider.manifest.spec.version
        - type: FromCompositeFieldPath
          fromFieldPath: spec.kibana.nodeCount
          toFieldPath: spec.forProvider.manifest.spec.count
        - type: FromCompositeFieldPath
          fromFieldPath: spec.targetCluster.name
          toFieldPath: spec.providerConfigRef.name
    - name: s3-bucket
      base:
        apiVersion: s3.aws.upbound.io/v1beta1
        kind: Bucket
        metadata:
          name: replaceme
          namespace: default
        spec:
          forProvider:
            region: replaceme
          providerConfigRef:
            name: irsa-providerconfig
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-s3-bucket"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.aws.region
          toFieldPath: spec.forProvider.region
